@model App.Domain.Feedback

@{
    ViewData["Title"] = "Edit Feedback";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Edit Feedback</h1>
    <div>
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-info">
            <i class="fas fa-eye"></i> View Details
        </a>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Edit Feedback Information</h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                    <input type="hidden" asp-for="Id" />

                    <div class="form-group mb-3">
                        <label asp-for="Title" class="form-label">Title <span class="text-danger">*</span></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Description" class="form-label">Description <span class="text-danger">*</span></label>
                        <textarea asp-for="Description" class="form-control" rows="6"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="DepartmentId" class="form-label">Department</label>
                        <select asp-for="DepartmentId" class="form-select" asp-items="ViewBag.DepartmentId">
                            <option value="">-- General Feedback (No specific department) --</option>
                        </select>
                        <span asp-validation-for="DepartmentId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-4">
                        <label class="form-label">Tags</label>
                        <div class="tags-container border rounded p-3 bg-light">
                            @if (ViewBag.AllTags != null)
                            {
                                @foreach (var tag in (IEnumerable<App.Domain.Tag>)ViewBag.AllTags)
                                {
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="selectedTags" value="@tag.Id" id="tag_@tag.Id"
                                               @(ViewBag.SelectedTags != null && ((string[])ViewBag.SelectedTags).Contains(tag.Id.ToString()) ? "checked" : "")>
                                        <label class="form-check-label" for="tag_@tag.Id">
                                            @tag.Title
                                        </label>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted mb-0">No tags available. <a asp-controller="Tags" asp-action="Create">Create some tags first</a>.</p>
                            }
                        </div>
                        <div class="form-text">Select relevant tags to categorize this feedback</div>
                    </div>

                    <!-- READ-ONLY metadata info -->
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <div class="form-group mb-2">
                                <label class="form-label">Created By</label>
                                <input value="@Model.CreatedBy" class="form-control" readonly />
                            </div>
                            <div class="form-group mb-2">
                                <label class="form-label">Created At</label>
                                <input value="@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")" class="form-control" readonly />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-2">
                                <label class="form-label">Changed By</label>
                                <input value="@Model.ChangedBy" class="form-control" readonly />
                            </div>
                            <div class="form-group mb-2">
                                <label class="form-label">Changed At</label>
                                <input value="@Model.ChangedAt?.ToString("yyyy-MM-dd HH:mm")" class="form-control" readonly />
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <!-- Current Tags -->
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Current Tags</h6>
            </div>
            <div class="card-body">
                @if (Model.Tags?.Any() == true)
                {
                    <div class="mb-2">
                        @foreach (var tag in Model.Tags)
                        {
                            <span class="badge bg-secondary me-1 mb-1">@tag.Title</span>
                        }
                    </div>
                    <small class="text-muted">Currently selected tags. Update the checkboxes above to change selection.</small>
                }
                else
                {
                    <p class="text-muted mb-0">No tags currently selected.</p>
                }
            </div>
        </div>

        <!-- Available Tags Reference -->
        @if (ViewBag.AllTags != null && ((IEnumerable<App.Domain.Tag>)ViewBag.AllTags).Any())
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="card-title mb-0">All Available Tags</h6>
                </div>
                <div class="card-body">
                    <small class="text-muted">All tags available for selection:</small>
                    <div class="mt-2">
                        @foreach (var tag in (IEnumerable<App.Domain.Tag>)ViewBag.AllTags)
                        {
                            <span class="badge bg-light text-dark me-1 mb-1">@tag.Title</span>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Comments Summary -->
        @if (Model.Comments?.Any() == true)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="card-title mb-0">Comments Summary</h6>
                </div>
                <div class="card-body">
                    <div class="text-center">
                        <div class="h4 mb-0 text-info">@Model.Comments.Count</div>
                        <small class="text-muted">Total Comments</small>
                    </div>
                    <hr />
                    <div class="text-center">
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-info">
                            <i class="fas fa-comments"></i> View All Comments
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // Add some visual feedback when tags are selected/deselected
        document.addEventListener('DOMContentLoaded', function() {
            const checkboxes = document.querySelectorAll('input[name="selectedTags"]');
            checkboxes.forEach(function(checkbox) {
                checkbox.addEventListener('change', function() {
                    const label = this.nextElementSibling;
                    if (this.checked) {
                        label.classList.add('text-primary', 'fw-bold');
                    } else {
                        label.classList.remove('text-primary', 'fw-bold');
                    }
                });

                // Set initial state
                if (checkbox.checked) {
                    checkbox.nextElementSibling.classList.add('text-primary', 'fw-bold');
                }
            });
        });
    </script>
}

<style>
    .tags-container {
        max-height: 200px;
        overflow-y: auto;
    }

    .form-check-inline {
        margin-right: 1rem;
        margin-bottom: 0.5rem;
    }

    .form-check-label {
        cursor: pointer;
    }

    .form-check-input:checked + .form-check-label {
        color: #0d6efd !important;
        font-weight: bold !important;
    }
</style>