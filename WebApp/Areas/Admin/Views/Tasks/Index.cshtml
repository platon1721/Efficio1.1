@model IEnumerable<App.Domain.Task>

@{
    ViewData["Title"] = "Tasks Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Tasks Management</h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Create New Task
    </a>
</div>

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-body">
        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-4">
                <label for="searchString" class="form-label">Search</label>
                <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Search by title or description..." />
            </div>
            <div class="col-md-3">
                <label for="statusFilter" class="form-label">Status Filter</label>
                <select name="statusFilter" class="form-select">
                    <option value="">All Statuses</option>
                    @if (ViewBag.StatusOptions != null)
                    {
                        @foreach (var status in (SelectList)ViewBag.StatusOptions)
                        {
                            <option value="@status.Value" selected="@(status.Value == ViewData["StatusFilter"]?.ToString())">@status.Text</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="sortOrder" class="form-label">Sort By</label>
                <select name="sortOrder" class="form-select">
                    <option value="">Title (A-Z)</option>
                    <option value="title_desc">Title (Z-A)</option>
                    <option value="Priority">Priority (Low-High)</option>
                    <option value="priority_desc">Priority (High-Low)</option>
                    <option value="Deadline">Deadline (Earliest)</option>
                    <option value="deadline_desc">Deadline (Latest)</option>
                </select>
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-primary me-2">
                    <i class="fas fa-search"></i> Filter
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-times"></i> Clear
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Tasks Table -->
<div class="card">
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                    <tr>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">
                                Title @if(ViewData["TitleSortParm"]?.ToString() == "title_desc") { <i class="fas fa-sort-down"></i> } else { <i class="fas fa-sort-up"></i> }
                            </a>
                        </th>
                        <th>Description</th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["PrioritySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">
                                Priority @if(ViewData["PrioritySortParm"]?.ToString() == "priority_desc") { <i class="fas fa-sort-down"></i> } else { <i class="fas fa-sort-up"></i> }
                            </a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["DeadlineSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">
                                Deadline @if(ViewData["DeadlineSortParm"]?.ToString() == "deadline_desc") { <i class="fas fa-sort-down"></i> } else { <i class="fas fa-sort-up"></i> }
                            </a>
                        </th>
                        <th>Assigned To</th>
                        <th>Department</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="@(item.TaskStatus == App.Domain.TaskStatus.Completed ? "table-success" :
                                   item.DeadLine < DateTime.Now && item.TaskStatus != App.Domain.TaskStatus.Completed ? "table-danger" : "")">
                            <td>
                                <strong>@Html.DisplayFor(modelItem => item.Title)</strong>
                                @if (item.Priority >= 4)
                                {
                                    <span class="badge bg-danger ms-1">High Priority</span>
                                }
                            </td>
                            <td>
                                @if (item.Description != null && item.Description.Length > 50)
                                {
                                    @(item.Description.Substring(0, 50))<text>...</text>
                                }
                                else
                                {
                                    @(item.Description ?? "")
                                }
                            </td>
                            <td>
                                    <span class="badge bg-@(item.Priority >= 4 ? "danger" : item.Priority >= 3 ? "warning" : "secondary")">
                                        Priority @item.Priority
                                    </span>
                            </td>
                            <td>
                                @if (item.DeadLine < DateTime.Now && item.TaskStatus != App.Domain.TaskStatus.Completed)
                                {
                                    <span class="text-danger">
                                            <i class="fas fa-exclamation-triangle"></i>
                                        @item.DeadLine.ToString("MMM dd, yyyy")
                                        </span>
                                }
                                else
                                {
                                    @item.DeadLine.ToString("MMM dd, yyyy")
                                }
                            </td>
                            <td>@(item.TaskKeeper?.PersonName ?? "Unassigned")</td>
                            <td>@(item.Department?.DepartmentName ?? "No Department")</td>
                            <td>
                                    <span class="badge bg-@(item.TaskStatus switch {
                                                                  App.Domain.TaskStatus.Open => "secondary",
                                                                  App.Domain.TaskStatus.InProgress => "primary",
                                                                  App.Domain.TaskStatus.Completed => "success",
                                                                  App.Domain.TaskStatus.Canceled => "dark",
                                                                  App.Domain.TaskStatus.OnHold => "warning",
                                                                  _ => "secondary"
                                                          })">
                                        @item.TaskStatus
                                    </span>
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    @if (item.TaskStatus != App.Domain.TaskStatus.Completed)
                                    {
                                        <form asp-action="MarkCompleted" asp-route-id="@item.Id" method="post" style="display: inline;">
                                            <button type="submit" class="btn btn-sm btn-outline-success" title="Mark as Completed" onclick="return confirm('Mark this task as completed?')">
                                                <i class="fas fa-check"></i>
                                            </button>
                                        </form>
                                    }
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger" title="Delete">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No tasks found</h4>
                <p class="text-muted">Create your first task to get started.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create New Task
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Auto-submit form when status filter changes
        document.querySelector('select[name="statusFilter"]').addEventListener('change', function() {
            this.form.submit();
        });

        // Auto-submit form when sort order changes
        document.querySelector('select[name="sortOrder"]').addEventListener('change', function() {
            this.form.submit();
        });
    </script>
}