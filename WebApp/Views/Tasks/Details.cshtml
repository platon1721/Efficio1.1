@model App.BLL.DTO.Task

@{
    ViewData["Title"] = "Task Details";
    var isOverdue = Model.DeadLine < DateTime.UtcNow && Model.TaskStatus != App.BLL.DTO.TaskStatus.Completed;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>Task Details</h1>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">
            <i class="fas fa-edit"></i> Update Task
        </a>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back to Tasks
        </a>
    </div>
</div>

@if (isOverdue)
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-triangle"></i> This task is overdue!
    </div>
}

<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-tasks"></i> @Html.DisplayFor(model => model.Title)
                </h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Description:</dt>
                    <dd class="col-sm-9">
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt class="col-sm-3">Priority:</dt>
                    <dd class="col-sm-9">
                        <span class="badge @(Model.Priority >= 4 ? "bg-danger" : (Model.Priority >= 3 ? "bg-warning text-dark" : "bg-secondary"))">
                            Priority @Model.Priority
                        </span>
                    </dd>

                    <dt class="col-sm-3">Due Date:</dt>
                    <dd class="col-sm-9">
                        @Model.DeadLine.ToString("MMMM dd, yyyy HH:mm")
                        @if (isOverdue)
                        {
                            <span class="text-danger ms-2">
                                <i class="fas fa-exclamation-triangle"></i> Overdue
                            </span>
                        }
                    </dd>

                    <dt class="col-sm-3">Status:</dt>
                    <dd class="col-sm-9">
                        @switch (Model.TaskStatus)
                        {
                            case App.BLL.DTO.TaskStatus.Open:
                                <span class="badge bg-warning text-dark">Open</span>
                                break;
                            case App.BLL.DTO.TaskStatus.InProgress:
                                <span class="badge bg-info">In Progress</span>
                                break;
                            case App.BLL.DTO.TaskStatus.Completed:
                                <span class="badge bg-success">Completed</span>
                                break;
                            case App.BLL.DTO.TaskStatus.Cancelled:
                                <span class="badge bg-secondary">Cancelled</span>
                                break;
                            case App.BLL.DTO.TaskStatus.OnHold:
                                <span class="badge bg-dark">On Hold</span>
                                break;
                        }
                    </dd>

                    @if (Model.Department != null)
                    {
                        <dt class="col-sm-3">Department:</dt>
                        <dd class="col-sm-9">
                            <span class="badge bg-info">@Model.Department.DepartmentName</span>
                        </dd>
                    }

                    @if (Model.TaskKeeper != null)
                    {
                        <dt class="col-sm-3">Assigned To:</dt>
                        <dd class="col-sm-9">
                            @Model.TaskKeeper.PersonName
                        </dd>
                    }

                    @if (Model.CompletedAt.HasValue)
                    {
                        <dt class="col-sm-3">Completed:</dt>
                        <dd class="col-sm-9">
                            <span class="text-success">
                                <i class="fas fa-check"></i> @Model.CompletedAt.Value.ToString("MMMM dd, yyyy HH:mm")
                            </span>
                        </dd>
                    }

                    @if (!string.IsNullOrEmpty(Model.CompletionNotes))
                    {
                        <dt class="col-sm-3">Completion Notes:</dt>
                        <dd class="col-sm-9">
                            <div class="bg-light p-3 rounded">
                                @Model.CompletionNotes
                            </div>
                        </dd>
                    }
                </dl>

                @if (Model.TaskStatus != App.BLL.DTO.TaskStatus.Completed)
                {
                    <div class="mt-4">
                        <h6>Quick Actions:</h6>
                        <div class="btn-group" role="group">
                            @if (Model.TaskStatus == App.BLL.DTO.TaskStatus.Open)
                            {
                                <form asp-action="UpdateStatus" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@Model.Id" />
                                    <input type="hidden" name="newStatus" value="@((int)App.BLL.DTO.TaskStatus.InProgress)" />
                                    <button type="submit" class="btn btn-outline-info btn-sm">
                                        <i class="fas fa-play"></i> Start Working
                                    </button>
                                </form>
                            }

                            @if (Model.TaskStatus == App.BLL.DTO.TaskStatus.InProgress)
                            {
                                <form asp-action="UpdateStatus" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@Model.Id" />
                                    <input type="hidden" name="newStatus" value="@((int)App.BLL.DTO.TaskStatus.Open)" />
                                    <button type="submit" class="btn btn-outline-warning btn-sm">
                                        <i class="fas fa-pause"></i> Pause
                                    </button>
                                </form>
                            }

                            <button type="button" class="btn btn-outline-success btn-sm" data-bs-toggle="modal" data-bs-target="#completeModal">
                                <i class="fas fa-check"></i> Complete Task
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Task Timeline</h6>
            </div>
            <div class="card-body">
                <div class="timeline">
                    <div class="timeline-item">
                        <div class="timeline-marker bg-primary"></div>
                        <div class="timeline-content">
                            <h6 class="timeline-title">Task Created</h6>
                            <p class="timeline-date">@Model.Id</p>
                        </div>
                    </div>

                    @if (Model.TaskStatus == App.BLL.DTO.TaskStatus.InProgress)
                    {
                        <div class="timeline-item">
                            <div class="timeline-marker bg-info"></div>
                            <div class="timeline-content">
                                <h6 class="timeline-title">In Progress</h6>
                                <p class="timeline-date">Current Status</p>
                            </div>
                        </div>
                    }

                    @if (Model.CompletedAt.HasValue)
                    {
                        <div class="timeline-item">
                            <div class="timeline-marker bg-success"></div>
                            <div class="timeline-content">
                                <h6 class="timeline-title">Completed</h6>
                                <p class="timeline-date">@Model.CompletedAt.Value.ToString("MMM dd, yyyy")</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.TaskStatus != App.BLL.DTO.TaskStatus.Completed)
{
    <!-- Complete Task Modal -->
    <div class="modal fade" id="completeModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="Complete" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <div class="modal-header">
                        <h5 class="modal-title">Complete Task</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Mark "<strong>@Model.Title</strong>" as completed?</p>
                        <div class="form-group">
                            <label for="completionNotes">Completion Notes (Optional)</label>
                            <textarea name="completionNotes" id="completionNotes" class="form-control" rows="4" placeholder="Add any notes about the completion..."></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">Complete Task</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<style>
    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: 15px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #dee2e6;
    }

    .timeline-item {
        position: relative;
        margin-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: -8px;
        width: 16px;
        height: 16px;
        border-radius: 50%;
        border: 2px solid #fff;
    }

    .timeline-content {
        background: #f8f9fa;
        padding: 10px 15px;
        border-radius: 5px;
    }

    .timeline-title {
        margin: 0 0 5px 0;
        font-size: 14px;
        font-weight: 600;
    }

    .timeline-date {
        margin: 0;
        font-size: 12px;
        color: #6c757d;
    }
</style>