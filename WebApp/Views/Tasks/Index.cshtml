@model IEnumerable<App.BLL.DTO.Task>

@{
    ViewData["Title"] = "My Tasks";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>My Tasks</h1>
    <a asp-action="MyTasks" class="btn btn-outline-secondary">
        <i class="fas fa-filter"></i> Filter View
    </a>
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <h3>No Tasks Assigned</h3>
        <p class="text-muted">You currently have no tasks assigned to you.</p>
    </div>
}
else
{
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h4>@Model.Count()</h4>
                    <small>Total Tasks</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <h4>@Model.Count(t => t.TaskStatus == App.BLL.DTO.TaskStatus.Open)</h4>
                    <small>Open</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <h4>@Model.Count(t => t.TaskStatus == App.BLL.DTO.TaskStatus.InProgress)</h4>
                    <small>In Progress</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <h4>@Model.Count(t => t.TaskStatus == App.BLL.DTO.TaskStatus.Completed)</h4>
                    <small>Completed</small>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        @foreach (var item in Model) {
            var isOverdue = item.DeadLine < DateTime.UtcNow && item.TaskStatus != App.BLL.DTO.TaskStatus.Completed;
            var priorityClass = item.Priority >= 4 ? "border-danger" : (item.Priority >= 3 ? "border-warning" : "border-secondary");
            
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 @priorityClass">
                    @if (isOverdue)
                    {
                        <div class="card-header bg-danger text-white">
                            <i class="fas fa-exclamation-triangle"></i> Overdue
                        </div>
                    }
                    
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                            <span class="badge bg-secondary">Priority @item.Priority</span>
                        </div>
                        
                        <p class="card-text">
                            @if (item.Description.Length > 100)
                            {
                                @(item.Description.Substring(0, 100))<text>...</text>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.Description)
                            }
                        </p>
                        
                        <div class="mb-2">
                            <small class="text-muted">
                                <i class="fas fa-calendar"></i> Due: @item.DeadLine.ToString("MMM dd, yyyy")
                            </small>
                        </div>
                        
                        @if (item.Department != null)
                        {
                            <div class="mb-2">
                                <span class="badge bg-info">@item.Department.DepartmentName</span>
                            </div>
                        }
                        
                        <div class="mb-2">
                            @switch (item.TaskStatus)
                            {
                                case App.BLL.DTO.TaskStatus.Open:
                                    <span class="badge bg-warning text-dark">Open</span>
                                    break;
                                case App.BLL.DTO.TaskStatus.InProgress:
                                    <span class="badge bg-info">In Progress</span>
                                    break;
                                case App.BLL.DTO.TaskStatus.Completed:
                                    <span class="badge bg-success">Completed</span>
                                    break;
                                case App.BLL.DTO.TaskStatus.Cancelled:
                                    <span class="badge bg-secondary">Cancelled</span>
                                    break;
                                case App.BLL.DTO.TaskStatus.OnHold:
                                    <span class="badge bg-dark">On Hold</span>
                                    break;
                            }
                        </div>
                        
                        @if (item.CompletedAt.HasValue)
                        {
                            <div class="mb-2">
                                <small class="text-success">
                                    <i class="fas fa-check"></i> Completed: @item.CompletedAt.Value.ToString("MMM dd, yyyy")
                                </small>
                            </div>
                        }
                    </div>
                    
                    <div class="card-footer">
                        <div class="btn-group w-100" role="group">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-eye"></i> Details
                            </a>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">
                                <i class="fas fa-edit"></i> Update
                            </a>
                            @if (item.TaskStatus != App.BLL.DTO.TaskStatus.Completed)
                            {
                                <button type="button" class="btn btn-outline-success btn-sm" data-bs-toggle="modal" data-bs-target="#completeModal-@item.Id">
                                    <i class="fas fa-check"></i> Complete
                                </button>
                            }
                        </div>
                    </div>
                </div>
            </div>
            
            @if (item.TaskStatus != App.BLL.DTO.TaskStatus.Completed)
            {
                <!-- Complete Task Modal -->
                <div class="modal fade" id="completeModal-@item.Id" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form asp-action="Complete" method="post">
                                <input type="hidden" name="id" value="@item.Id" />
                                <div class="modal-header">
                                    <h5 class="modal-title">Complete Task</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <p>Mark "<strong>@item.Title</strong>" as completed?</p>
                                    <div class="form-group">
                                        <label for="completionNotes-@item.Id">Completion Notes (Optional)</label>
                                        <textarea name="completionNotes" id="completionNotes-@item.Id" class="form-control" rows="3" placeholder="Add any notes about the completion..."></textarea>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-success">Complete Task</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}